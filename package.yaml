name:                perfect-lang
version:             0.1.0.0
github:              "neclitoris/perfect-lang"
license:             ""
author:              ""
maintainer:          ""
copyright:           ""

extra-source-files: []

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         ""

dependencies:
- base >= 4.7 && < 5
- recursion-schemes
- deriving-compat
- megaparsec
- parser-combinators
- template-haskell
- data-fix
- prettyprinter
- text

library:
  source-dirs: src

executables:
  untyped-lambda:
    main:                UntypedLambda.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - perfect-lang

tests:
  lang-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - perfect-lang

default-extensions:
- ApplicativeDo
- BlockArguments
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveDataTypeable
- DeriveGeneric
- DeriveGeneric
- DeriveTraversable
- DerivingStrategies
- DuplicateRecordFields
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GeneralizedNewtypeDeriving
- ImportQualifiedPost
- InstanceSigs
- LambdaCase
- LiberalTypeSynonyms
- MultiParamTypeClasses
- NamedFieldPuns
- NumericUnderscores
- OverloadedStrings
- PatternSynonyms
- QuasiQuotes
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- StandaloneKindSignatures
- StrictData
- TupleSections
- TypeApplications
- TypeFamilies
- TypeOperators
- ViewPatterns
